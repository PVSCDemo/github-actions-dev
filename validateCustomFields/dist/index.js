(()=>{var __webpack_modules__={345:(e,t,o)=>{"use strict";const r=o(495);e.exports=(e,t)=>{const o=`Bearer ${t}`;const s=e.endsWith("/")?e.substr(0,e.lastIndexOf("/")):e;const a={getCard:e=>r(`${s}/io/card/${e}`,{method:"GET",headers:{Authorization:o}}).json(),blockCard:(e,t,a)=>r(`${s}/io/card/${e}`,{method:"PATCH",json:[{op:"replace",path:"/blockReason",value:a},{op:"replace",path:"/isBlocked",value:t}],headers:{Authorization:o}}).json(),moveCard:(e,t,a)=>r(`${s}/io/card/move`,{method:"POST",json:{cardIds:[e],destination:{laneId:t},wipOverrideComment:a},headers:{Authorization:o}}).json(),assignUsers:(e,t,a,n)=>{const i={cardIds:e};if(t&&t.length){i.userIdsToAssign=t}if(a&&a.length){i.userIdsToUnassign=a}if(n){i.wipOverrideComment=n}return r(`${s}/io/card/assign`,{method:"POST",json:i,headers:{Authorization:o}}).json()},addComment:(e,t)=>r(`${s}/io/card/${e}/comment`,{method:"POST",json:{text:t},headers:{Authorization:o}}).json(),createCard:async e=>{const{id:t}=await r(`${s}/io/card`,{method:"POST",json:e,headers:{Authorization:o}}).json();return t},async verifyCardPosition(e,t){const o=await a.getCard(e);return o.lane.id===t}};return a}},970:(e,t,o)=>{"use strict";const{getInput:r,getBooleanInput:s,setFailed:a,setOutput:n,exportVariable:i}=o(389);e.exports={getInputParams({required:e=[],optional:t=[],asBoolean:o=[]}){const a=[];for(const t of e){const e=o.includes(t)?s:r;a.push(e(t,{required:true}))}for(const e of t){const t=o.includes(e)?s:r;a.push(t(e))}return a},reportError(e,t){const o=`${e}; ${t.message}`;n("error",o);i("LK_ERROR_MESSAGE",o);a(t)},validateLeankitUrl(e,t){const o=/^https:\/\/.+\.(leankit\.com|leankit\.io|localkanban\.com)\/?$/i.test(t);if(!o){throw new Error(`Expected a leankit url for '${e}' action parameter`)}}}},389:module=>{module.exports=eval("require")("@actions/core")},495:module=>{module.exports=eval("require")("got")}};var __webpack_module_cache__={};function __nccwpck_require__(e){var t=__webpack_module_cache__[e];if(t!==undefined){return t.exports}var o=__webpack_module_cache__[e]={exports:{}};var r=true;try{__webpack_modules__[e](o,o.exports,__nccwpck_require__);r=false}finally{if(r)delete __webpack_module_cache__[e]}return o.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var __webpack_exports__={};(()=>{"use strict";const{setOutput:e}=__nccwpck_require__(389);const t=__nccwpck_require__(345);const{getInputParams:o,reportError:r,validateLeankitUrl:s}=__nccwpck_require__(970);(async()=>{const[r,a,n,i,c]=o({required:["host","apiToken","cardId","requiredCustomFields"],optional:["customFields"]});s("host",r);const{getCard:d}=t(r,a);let _;if(c){_=JSON.parse(c)}else{({customFields:_}=await d(n))}e("customFields",_);const u={};const l={};_.forEach((({fieldId:e,label:t,value:o})=>{if(o!==null&&o!==undefined&&o!==""){u[e]=o;l[t.toLowerCase()]=o}}));e("customFieldsByLabel",l);e("customFieldsById",u);const p=i.split(/\s*,\s*/).map((e=>e.trim()));const m=[];for(const e of p){if(!(e.toLowerCase()in l||e in u)){m.push(e)}}if(m.length){throw new Error(`Card is missing required custom fields: ${m.join(", ")}`)}})().catch((e=>{r("validateCustomFields",e)}))})();module.exports=__webpack_exports__})();